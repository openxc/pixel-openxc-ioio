#!/bin/bash
if [ $(uname -o) = Cygwin ]; then
  ANDROID='cmd /C android'
else
  ANDROID=android
fi

ZIP=zip
TMPOUT=$(mktemp -ut ioio.XXXXXX.zip)

PROJECTS="IOIOLib \
          IOIOLibBT \
          IOIOLibAccessory \
          applications/HelloIOIO \
          applications/HelloIOIOService \
          applications/IOIOSimpleApp \
          applications/pc/HelloIOIOConsole \
          applications/pc/HelloIOIOSwing"

TARGETS=(android-3 \
         android-10 \
         'Google Inc.:Google APIs:10' \
         android-7 \
         android-7 \
         android-7)

APKS="applications/HelloIOIO \
      applications/HelloIOIOService \
      applications/IOIOSimpleApp"

JARS="applications/pc/HelloIOIOConsole/bin/HelloIOIOConsole.jar \
      applications/pc/HelloIOIOSwing/bin/HelloIOIOSwing.jar \
      IOIOEmulatorBridge/bin/bridge.jar"

if test $# -ne 1; then
  echo "Usage: $0 <out_zip>"
  exit 1
fi

cd software

#i=0
#for PROJECT in $PROJECTS; do
#  (cd $PROJECT && $ANDROID -s update project --name $(basename $PROJECT) --path . --target "${TARGETS[i]}")
#  let "i++"
#done

echo Generating Javadoc for IOIOLib
ant -q -f IOIOLib/javadoc.xml

for PROJECT in $PROJECTS; do
  echo SOURCE: $PROJECT
  $ZIP -q -r $TMPOUT $PROJECT -x "$PROJECT/bin/*" "$PROJECT/gen/*"
done

for APK in $APKS; do
  echo BINARY: $APK
 # (cd $APK && ant -q debug >/dev/null)
  BASENAME=$(basename $APK)
#  APK_DEBUG="$APK/bin/$BASENAME.apk"
  APK="$APK/bin/$BASENAME.apk"
#  mv $APK_DEBUG $APK
  $ZIP -q -j $TMPOUT $APK
done

for JAR in $JARS; do
  echo BINARY: $JAR
  $ZIP -q -j $TMPOUT $JAR
done

cd -
mv $TMPOUT $1
